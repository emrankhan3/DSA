#include<bits/stdc++.h>
using namespace std;

bool vis[100000];
vector<pair<int,int>>v[100000];
int cost=-9,node=-1;

void dfs(int n,int c)
{
    if(vis[n])return;

    if(cost<c){
        cost = c;
        node = n;
    }
    vis[n]=1;

    for(auto i:v[n]){
        dfs(i.first,i.second+c);
    }
}

void kick(int cASE){
    int n;
    cin >>n;
    cost=0;
    for(int i=0; i<=n; i++){
        vis[i]=0;
        v[i].clear();
    }
    for (int i=1; i<n; i++ )
    {
        int x,y,w;
        cin >> x >> y >> w;
        v[x].push_back({y,w});
        v[y].push_back({x,w});
    }
    dfs(0,0);
    for(int i=0; i<n; i++)vis[i]=0;
    cost=0;
    dfs(node,0);

    cout<<"Case "<<cASE<<": "<<cost<<endl;
}

int main()
{
    int t;
    cin >> t;
    for (int i=1; i<=t; i++ )
    {
        kick(i);
    }
}
